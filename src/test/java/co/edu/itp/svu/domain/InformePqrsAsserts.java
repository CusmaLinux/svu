package co.edu.itp.svu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InformePqrsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformePqrsAllPropertiesEquals(InformePqrs expected, InformePqrs actual) {
        assertInformePqrsAutoGeneratedPropertiesEquals(expected, actual);
        assertInformePqrsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformePqrsAllUpdatablePropertiesEquals(InformePqrs expected, InformePqrs actual) {
        assertInformePqrsUpdatableFieldsEquals(expected, actual);
        assertInformePqrsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformePqrsAutoGeneratedPropertiesEquals(InformePqrs expected, InformePqrs actual) {
        assertThat(expected)
            .as("Verify InformePqrs auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformePqrsUpdatableFieldsEquals(InformePqrs expected, InformePqrs actual) {
        assertThat(expected)
            .as("Verify InformePqrs relevant properties")
            .satisfies(e -> assertThat(e.getFechaInicio()).as("check fechaInicio").isEqualTo(actual.getFechaInicio()))
            .satisfies(e -> assertThat(e.getFechaFin()).as("check fechaFin").isEqualTo(actual.getFechaFin()))
            .satisfies(e -> assertThat(e.getTotalPqrs()).as("check totalPqrs").isEqualTo(actual.getTotalPqrs()))
            .satisfies(e -> assertThat(e.getTotalResueltas()).as("check totalResueltas").isEqualTo(actual.getTotalResueltas()))
            .satisfies(e -> assertThat(e.getTotalPendientes()).as("check totalPendientes").isEqualTo(actual.getTotalPendientes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInformePqrsUpdatableRelationshipsEquals(InformePqrs expected, InformePqrs actual) {
        assertThat(expected)
            .as("Verify InformePqrs relationships")
            .satisfies(e -> assertThat(e.getOficina()).as("check oficina").isEqualTo(actual.getOficina()));
    }
}
