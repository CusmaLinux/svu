package co.edu.itp.svu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ArchivoAdjuntoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchivoAdjuntoAllPropertiesEquals(ArchivoAdjunto expected, ArchivoAdjunto actual) {
        assertArchivoAdjuntoAutoGeneratedPropertiesEquals(expected, actual);
        assertArchivoAdjuntoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchivoAdjuntoAllUpdatablePropertiesEquals(ArchivoAdjunto expected, ArchivoAdjunto actual) {
        assertArchivoAdjuntoUpdatableFieldsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchivoAdjuntoAutoGeneratedPropertiesEquals(ArchivoAdjunto expected, ArchivoAdjunto actual) {
        assertThat(expected)
            .as("Verify ArchivoAdjunto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertArchivoAdjuntoUpdatableFieldsEquals(ArchivoAdjunto expected, ArchivoAdjunto actual) {
        assertThat(expected)
            .as("Verify ArchivoAdjunto relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getUrlArchivo()).as("check urlArchivo").isEqualTo(actual.getUrlArchivo()))
            .satisfies(e -> assertThat(e.getFechaSubida()).as("check fechaSubida").isEqualTo(actual.getFechaSubida()));
    }
}
