package co.edu.itp.svu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OficinaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOficinaAllPropertiesEquals(Oficina expected, Oficina actual) {
        assertOficinaAutoGeneratedPropertiesEquals(expected, actual);
        assertOficinaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOficinaAllUpdatablePropertiesEquals(Oficina expected, Oficina actual) {
        assertOficinaUpdatableFieldsEquals(expected, actual);
        assertOficinaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOficinaAutoGeneratedPropertiesEquals(Oficina expected, Oficina actual) {
        assertThat(expected)
            .as("Verify Oficina auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOficinaUpdatableFieldsEquals(Oficina expected, Oficina actual) {
        assertThat(expected)
            .as("Verify Oficina relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()))
            .satisfies(e -> assertThat(e.getNivel()).as("check nivel").isEqualTo(actual.getNivel()))
            .satisfies(e -> assertThat(e.getOficinaSuperior()).as("check oficinaSuperior").isEqualTo(actual.getOficinaSuperior()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOficinaUpdatableRelationshipsEquals(Oficina expected, Oficina actual) {
        // empty method
    }
}
