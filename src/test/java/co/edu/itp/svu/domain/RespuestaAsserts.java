package co.edu.itp.svu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RespuestaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRespuestaAllPropertiesEquals(Respuesta expected, Respuesta actual) {
        assertRespuestaAutoGeneratedPropertiesEquals(expected, actual);
        assertRespuestaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRespuestaAllUpdatablePropertiesEquals(Respuesta expected, Respuesta actual) {
        assertRespuestaUpdatableFieldsEquals(expected, actual);
        assertRespuestaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRespuestaAutoGeneratedPropertiesEquals(Respuesta expected, Respuesta actual) {
        assertThat(expected)
            .as("Verify Respuesta auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRespuestaUpdatableFieldsEquals(Respuesta expected, Respuesta actual) {
        assertThat(expected)
            .as("Verify Respuesta relevant properties")
            .satisfies(e -> assertThat(e.getContenido()).as("check contenido").isEqualTo(actual.getContenido()))
            .satisfies(e -> assertThat(e.getFechaRespuesta()).as("check fechaRespuesta").isEqualTo(actual.getFechaRespuesta()))
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRespuestaUpdatableRelationshipsEquals(Respuesta expected, Respuesta actual) {
        assertThat(expected)
            .as("Verify Respuesta relationships")
            .satisfies(e -> assertThat(e.getPqr()).as("check pqr").isEqualTo(actual.getPqr()));
    }
}
